// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TweetRegistry extends ethereum.SmartContract {
  static bind(address: Address): TweetRegistry {
    return new TweetRegistry("TweetRegistry", address);
  }

  register(name: string, accountAddress: Address): BigInt {
    let result = super.call("register", "register(string,address):(int256)", [
      ethereum.Value.fromString(name),
      ethereum.Value.fromAddress(accountAddress)
    ]);

    return result[0].toBigInt();
  }

  try_register(
    name: string,
    accountAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "register",
      "register(string,address):(int256)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromAddress(accountAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNumberOfAccounts(): BigInt {
    let result = super.call(
      "getNumberOfAccounts",
      "getNumberOfAccounts():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNumberOfAccounts(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumberOfAccounts",
      "getNumberOfAccounts():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAddressOfName(name: string): Address {
    let result = super.call(
      "getAddressOfName",
      "getAddressOfName(string):(address)",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toAddress();
  }

  try_getAddressOfName(name: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAddressOfName",
      "getAddressOfName(string):(address)",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getNameOfAddress(addr: Address): string {
    let result = super.call(
      "getNameOfAddress",
      "getNameOfAddress(address):(string)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toString();
  }

  try_getNameOfAddress(addr: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getNameOfAddress",
      "getNameOfAddress(address):(string)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  unregister(): string {
    let result = super.call("unregister", "unregister():(string)", []);

    return result[0].toString();
  }

  try_unregister(): ethereum.CallResult<string> {
    let result = super.tryCall("unregister", "unregister():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAddressOfId(id: BigInt): Address {
    let result = super.call(
      "getAddressOfId",
      "getAddressOfId(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toAddress();
  }

  try_getAddressOfId(id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAddressOfId",
      "getAddressOfId(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AdminUnregisterCall extends ethereum.Call {
  get inputs(): AdminUnregisterCall__Inputs {
    return new AdminUnregisterCall__Inputs(this);
  }

  get outputs(): AdminUnregisterCall__Outputs {
    return new AdminUnregisterCall__Outputs(this);
  }
}

export class AdminUnregisterCall__Inputs {
  _call: AdminUnregisterCall;

  constructor(call: AdminUnregisterCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AdminUnregisterCall__Outputs {
  _call: AdminUnregisterCall;

  constructor(call: AdminUnregisterCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get accountAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get result(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AdminRetrieveDonationsCall extends ethereum.Call {
  get inputs(): AdminRetrieveDonationsCall__Inputs {
    return new AdminRetrieveDonationsCall__Inputs(this);
  }

  get outputs(): AdminRetrieveDonationsCall__Outputs {
    return new AdminRetrieveDonationsCall__Outputs(this);
  }
}

export class AdminRetrieveDonationsCall__Inputs {
  _call: AdminRetrieveDonationsCall;

  constructor(call: AdminRetrieveDonationsCall) {
    this._call = call;
  }
}

export class AdminRetrieveDonationsCall__Outputs {
  _call: AdminRetrieveDonationsCall;

  constructor(call: AdminRetrieveDonationsCall) {
    this._call = call;
  }
}

export class AdminDeleteRegistryCall extends ethereum.Call {
  get inputs(): AdminDeleteRegistryCall__Inputs {
    return new AdminDeleteRegistryCall__Inputs(this);
  }

  get outputs(): AdminDeleteRegistryCall__Outputs {
    return new AdminDeleteRegistryCall__Outputs(this);
  }
}

export class AdminDeleteRegistryCall__Inputs {
  _call: AdminDeleteRegistryCall;

  constructor(call: AdminDeleteRegistryCall) {
    this._call = call;
  }
}

export class AdminDeleteRegistryCall__Outputs {
  _call: AdminDeleteRegistryCall;

  constructor(call: AdminDeleteRegistryCall) {
    this._call = call;
  }
}

export class AdminSetAccountAdministratorCall extends ethereum.Call {
  get inputs(): AdminSetAccountAdministratorCall__Inputs {
    return new AdminSetAccountAdministratorCall__Inputs(this);
  }

  get outputs(): AdminSetAccountAdministratorCall__Outputs {
    return new AdminSetAccountAdministratorCall__Outputs(this);
  }
}

export class AdminSetAccountAdministratorCall__Inputs {
  _call: AdminSetAccountAdministratorCall;

  constructor(call: AdminSetAccountAdministratorCall) {
    this._call = call;
  }

  get accountAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AdminSetAccountAdministratorCall__Outputs {
  _call: AdminSetAccountAdministratorCall;

  constructor(call: AdminSetAccountAdministratorCall) {
    this._call = call;
  }
}

export class AdminSetRegistrationDisabledCall extends ethereum.Call {
  get inputs(): AdminSetRegistrationDisabledCall__Inputs {
    return new AdminSetRegistrationDisabledCall__Inputs(this);
  }

  get outputs(): AdminSetRegistrationDisabledCall__Outputs {
    return new AdminSetRegistrationDisabledCall__Outputs(this);
  }
}

export class AdminSetRegistrationDisabledCall__Inputs {
  _call: AdminSetRegistrationDisabledCall;

  constructor(call: AdminSetRegistrationDisabledCall) {
    this._call = call;
  }

  get registrationDisabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class AdminSetRegistrationDisabledCall__Outputs {
  _call: AdminSetRegistrationDisabledCall;

  constructor(call: AdminSetRegistrationDisabledCall) {
    this._call = call;
  }
}

export class UnregisterCall extends ethereum.Call {
  get inputs(): UnregisterCall__Inputs {
    return new UnregisterCall__Inputs(this);
  }

  get outputs(): UnregisterCall__Outputs {
    return new UnregisterCall__Outputs(this);
  }
}

export class UnregisterCall__Inputs {
  _call: UnregisterCall;

  constructor(call: UnregisterCall) {
    this._call = call;
  }
}

export class UnregisterCall__Outputs {
  _call: UnregisterCall;

  constructor(call: UnregisterCall) {
    this._call = call;
  }

  get unregisteredAccountName(): string {
    return this._call.outputValues[0].value.toString();
  }
}
